# We need an empty dictionary, to store and display the letter frequencies.
word_count = {}

# Text string

text = "Later in the course, you'll see how to use the collections Counter class."


# Your code goes here ...
def letter_frequency(container: dict, item: str) -> dict:
    """
     This function store and display the letter frequency in a `data` for a given `item`.

     :param container in dict form
     :param item in string form
     :return dict
     """
    keys = container.keys()
    # print(keys)
    for char in text.casefold():
        if char.isalnum():
            if char in keys:
                container[char] += 1
            else:
                container[char] = 1

    return container


ans = letter_frequency(word_count, text)
print(sorted(ans.keys()))
print()

#  (or)

# We need an empty dictionary, to store and display the letter frequencies.
word_count = {}

# Text string
text = "Later in the course, you'll see how to use the collections Counter class."


for char in text.casefold():
    keys = word_count.keys()
    if char.isalnum():
        if char in keys:
            word_count[char] += 1
        else:
            word_count[char] = 1

# Printing the dictionary
for letter, count in sorted(word_count.items()):
    print(f"{letter}: {count}")
    
 print()
 
# Iterate over every character in the string.
for char in text.casefold():
    # We're only counting letters and digits (no punctuation).
    if char.isalnum():
        word_count[char] = word_count.setdefault(char, 0) + 1
 
# Printing the dictionary
for letter, count in sorted(word_count.items()):
    print(letter, count)

